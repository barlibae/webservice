// Code generated by MockGen. DO NOT EDIT.
// Source: albums.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	albums "github.com/barlibae/webservice/albums"
	gomock "github.com/golang/mock/gomock"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// AlbumByID mocks base method.
func (m *MockRepo) AlbumByID(id string) (albums.Album, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AlbumByID", id)
	ret0, _ := ret[0].(albums.Album)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// AlbumByID indicates an expected call of AlbumByID.
func (mr *MockRepoMockRecorder) AlbumByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AlbumByID", reflect.TypeOf((*MockRepo)(nil).AlbumByID), id)
}

// Albums mocks base method.
func (m *MockRepo) Albums() []albums.Album {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Albums")
	ret0, _ := ret[0].([]albums.Album)
	return ret0
}

// Albums indicates an expected call of Albums.
func (mr *MockRepoMockRecorder) Albums() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Albums", reflect.TypeOf((*MockRepo)(nil).Albums))
}

// CreateAlbum mocks base method.
func (m *MockRepo) CreateAlbum(album albums.Album) albums.Album {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAlbum", album)
	ret0, _ := ret[0].(albums.Album)
	return ret0
}

// CreateAlbum indicates an expected call of CreateAlbum.
func (mr *MockRepoMockRecorder) CreateAlbum(album interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAlbum", reflect.TypeOf((*MockRepo)(nil).CreateAlbum), album)
}
